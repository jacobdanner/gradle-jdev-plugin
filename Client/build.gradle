import java.util.logging.Logger

apply plugin: 'java'
apply plugin: 'groovy'

sourceCompatibility = 1.5
version = '1.0'

repositories {
  mavenCentral()
}
group = "com.jacobd.test.app.javaws"
dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.11'
  compile localGroovy()
  compile gradleApi()

}
/*
JprFileHelper helper = new JprFileHelper();
project.setProperty('jprFile', file("Client.jpr"))
ext {
  jprFile = file("Client.jpr")
}
assert project.hasProperty("jprFile")
assert project.jprFile.exists()
def outDir = helper.getProjectOutputDir(project.jprFile)
println "JPRFile outputDir == $outDir"
def srcDirsJpr = files(helper.getProjectSourcePathAsString(jprFile).collect { new File(projectDir,it) })
println "srcDirs == "
srcDirsJpr.each{println it}
*/
buildDir = 'classes'//new File(projectDir, helper.getProjectOutputDir(project.jprFile))

javadoc {
  source sourceSets.main.allJava
  title = 'Gradle Sample Project'
  options.links = ['http://docs.oracle.com/javase/6/docs/api/']
  options.footer = "Generated on ${new Date().format('dd MMM yyyy')}"
  options.header = "Documention for version ${project.version}"
}

sourceSets.main.java.srcDirs = ["src"]//srcDirJpr
/*sourceSets {
  main {
    java {
      srcDirs = //files(srcDirJpr)
    }
    output.classesDir=file('classes') //outDir
    output.resourcesDir=file('classes') //outDir
    resources {
      srcDir = helper.getProjectResourcePaths(jprFile)
    }
  }
}*/


jar.doLast{
  println "find ${project.buildDir}".execute().text
}




